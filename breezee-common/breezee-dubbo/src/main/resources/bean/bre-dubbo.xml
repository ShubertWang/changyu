<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2016 Breezee.org. All Rights Reserved.
  -->

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!-- Dubbo应用信息 -->
    <dubbo:application
            name="dubbo-app-breezee"
            owner="breezee"
            organization="breezee"/>

    <!-- 服务注册, 开发态下，非此模块的开发人员，设置register为false -->
    <dubbo:registry
            address="${dubbo.registry.address}"
            timeout="${dubbo.registry.timeout}"
            register="${dubbo.registry.register}"
            file="${dubbo.registry.file}"
            subscribe="${dubbo.registry.subscribe}"/>

    <dubbo:consumer timeout="${dubbo.consumer.timeout}"/>

    <!-- 使用基于dubbo提供的注解，例如Service等等，来减少xml的配置 -->
    <!--<dubbo:annotation package="com.breezee"/>-->

    <!--uncomment this if you want to test dubbo's monitor-->
    <!--<dubbo:monitor protocol="registry"/>-->

    <!--uncomment this if you want to test dubbo's monitor-->
    <!--<dubbo:monitor protocol="registry"/>-->

    <!-- here we demonstrate both annotation-based and xml-based configs -->
    <!--<dubbo:annotation package="com.alibaba.dubbo.demo.user.facade" />-->

    <!--<dubbo:protocol name="dubbo" serialization="kryo" optimizer="com.alibaba.dubbo.demo.SerializationOptimizerImpl"/>-->
    <!--<dubbo:protocol name="dubbo" serialization="fst" optimizer="com.alibaba.dubbo.demo.SerializationOptimizerImpl"/>-->

    <!--<dubbo:protocol name="dubbo" serialization="nativejava"/>-->
    <!--<dubbo:protocol name="dubbo" serialization="hessian2"/>-->
    <!--<dubbo:protocol name="dubbo" serialization="fastjson"/>-->
    <!--<dubbo:protocol name="dubbo" serialization="dubbo"/>-->


    <!--TODO according to the spring convention, we should use something like keep-alive-->
    <!-- use netty server -->
    <!--<dubbo:protocol name="rest" port="8888" keepalive="false" server="netty" iothreads="5" threads="100" contextpath="services"/>-->

    <!-- use tjws server -->
    <!--<dubbo:protocol name="rest" port="8888" server="tjws" contextpath="services"/>-->

    <!-- use the external tomcat or other server with the servlet approach; the port and contextpath must be exactly the same as those in external server -->
    <!--<dubbo:protocol name="rest" port="8888" contextpath="services" server="servlet"/>-->
    <!--<dubbo:protocol name="rest" port="${server.port}" threads="500"-->
    <!--contextpath="services" server="servlet" accepts="500"/>-->

    <!--<dubbo:protocol name="dubbo" port="${dubbo.protocol.port}"/>-->

</beans>